# -*- coding: utf-8 -*-
"""notebook_1_Jaswanthi_Murugudu.ipynb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PiTVuFmbKTJaqf0pdxIiFImOLY-Oybmh
"""

#Import Necessary Libraries
import requests
import matplotlib.pyplot as plt
import seaborn as sns
import datetime

#Function to Fetch Weather Data
def fetch_weather_data(city, api_key):
    url = f"https://api.openweathermap.org/data/2.5/forecast?q={city}&appid={api_key}&units=metric"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    else:
        print("Error fetching data")
        return None

#Function to Process Data
def process_weather_data(data):
    forecast_list = data['list']
    dates = [datetime.datetime.fromtimestamp(entry['dt']) for entry in forecast_list]
    temperatures = [entry['main']['temp'] for entry in forecast_list]
    humidity = [entry['main']['humidity'] for entry in forecast_list]
    wind_speed = [entry['wind']['speed'] for entry in forecast_list]

    return dates, temperatures, humidity, wind_speed

#Function to Plot Weather Data
def plot_weather(dates, temperatures, humidity, wind_speed, city):
    sns.set_style("darkgrid") #Seaborn style - makes plots look better
    fig, ax1 = plt.subplots(figsize=(12, 6))
 #Plot Temperature (Primary Y-Axis)
    ax1.plot(dates, temperatures, label='Temperature (°C)', color='red', marker='o')
    ax1.set_xlabel('Date')
    ax1.set_ylabel('Temperature (°C)', color='red')
    ax1.tick_params(axis='y', labelcolor='red')
 #Plot Humidity (Secondary Y-Axis)
    ax2 = ax1.twinx()
    ax2.plot(dates, humidity, label='Humidity (%)', color='blue', marker='s')
    ax2.set_ylabel('Humidity (%)', color='blue')
    ax2.tick_params(axis='y', labelcolor='blue')
 #Add Title, Legend & Format Date
    plt.title(f'Weather Forecast for {city}')
    fig.legend(loc='upper left', bbox_to_anchor=(0.1, 0.9))
    plt.xticks(rotation=45)
    plt.show()

#Main Program Execution - Providing input city and API Key to fetch the weather report
if __name__ == "__main__":
    API_KEY = "5a7324e7d0c8a05288f855abdc75d75f"
    CITY = "Bengaluru"

    weather_data = fetch_weather_data(CITY, API_KEY)
    if weather_data:
        dates, temperatures, humidity, wind_speed = process_weather_data(weather_data)
        plot_weather(dates, temperatures, humidity, wind_speed, CITY)